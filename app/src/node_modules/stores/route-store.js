var Fluxxor = require("fluxxor")
var actions = require("actions")

var _       = require('lodash')

var log     = require('debug')('src:node_modules:stores:route-store')


var RouteStore = Fluxxor.createStore({
  initialize: function (options) {

    this.router           = options.router

    this.bindActions(
      actions.constants.ROUTE.TRANSITION, this.handleRouteTransition,
      actions.constants.ROUTE.GOBACK, this.goBack
    )
  },
  getCurrentRoute : function() {
    return this.router.getRouteAtDepth(1).name;
  },
  getCurrentParams: function () {
    return this.router.getCurrentParams()
  },
  getCurrentQuery: function () {
    return this.router.getCurrentQuery()
  },
  // transition to new route
  handleRouteTransition: function (payload) {
    log('handleRouteTransition', payload)

    var payloadQuery = _.omit(payload.query, function (val) { return val === '' });

    // if route specified transition as specified by payload - disregard current paramas or query
    if (payload.route) {
      this.router.transitionTo(payload.route, payload.params || {}, payloadQuery);
    } else {
      // if params but not route specified get current route and transition to params as specified by payload
      // disregard current query
      if (payload.params) {
        this.router.transitionTo(this.getCurrentRoute(), payload.params || {}, payloadQuery);
      } else {
        if (payloadQuery) {
          this.router.transitionTo(this.getCurrentRoute(), this.getCurrentParams(), payloadQuery )
        }
      }
    }

  },
  goBack : function () {
    log('goback')
    this.router.goBack()
  }



});

module.exports = RouteStore;
