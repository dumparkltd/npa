// helpers
var _ = require('lodash')

// util
var parseHTML = require('../parse-html')

module.exports = function (data, type, showRecs, elements) {
     
  function makeCategoryList (categories, split) {
    split = typeof split !== 'undefined' ? split : ' , '
    return _.map(categories, function (cat) { return cat }).join(split)
  }  
  var customElements = {    
    header : function(data,type) {
      var idIcon 
      switch (type) {
        case 'issue' :
          idIcon = 'cat-issues-white'
          break
        case 'group' :
          idIcon = 'cat-groups-white'
          break
        case 'agency' :
          idIcon = 'cat-agencies-white'
          break
      }
      return {
        columns : [
          {
            stack: [ { text: data.supTitle.toUpperCase(), style: 'itemSupTitle' } ],
            width:427
          },
          {
            image : idIcon,
            width:63
          }
        ]
      }
    },
    
    recommendations : function(recs){
      if (showRecs) {
        return {
          table : {
            widths: [ 163],
            body : [
              [ { text: 'Related UPR Recommendation' + (recs.length !== 1 ? 's' : ''), style : ['sideTableCellTitle','sideTableCell'] }],
              [ {canvas: [{ type: 'line', x1: 0, y1: 0, x2: 143, y2: 0, lineWidth: 0.5, lineColor :'#fff' }],style:'sideTableCell'}],
              [ { text : 'No.', style : ['sideTableCell'] } ],
              [ { text : makeCategoryList(recs,', '), style : ['sideTableCell', 'blue' ] }]
            ]
          },
          layout: 'noBorders',
          style : 'sideTable',
          width :163
        }
      } else {
        return ''
      }
    }
  }
  elements = _.extend (elements,customElements)
  
  return [
    elements.header(data,type),
    {
      text: data.title,
      style: 'itemTitleAction'
    },
    {
      columns: [
        {
          stack: [
            {
              canvas: [{ type: 'line', x1: 0, y1:0, x2: 320, y2: 0, lineWidth: 0.5, lineColor :'#B6BDBF' }],
              margin: [0, 0, 0, 10]
            },
            {text: data.contentTitle, style: ['itemContentSectionTitle','blue'] },           
            parseHTML(data.content)     
          ],
          width: 320
        },
        {
          stack : [
            {
              table : {
                widths: [ 163],
                body : [
                  [ { text: data.asideTitle , style : ['sideTableCellTitle','sideTableCell'] }],
                  [ {canvas: [{ type: 'line', x1: 0, y1: 0, x2: 143, y2: 0, lineWidth: 0.5, lineColor :'#fff' }],style:'sideTableCell'}],
                  [ 
                    {
                      stack : [
                        type !== 'agency' ? parseHTML(data.aside) : data.aside
                      ],
                      style : ['sideTableCell']
                    }
                  ]
                ]
              },
              layout: 'noBorders',
              style : 'sideTable',
              width :163
            },
            elements.recommendations(data.recommendations)
          ]          
        }                  
      ]
    }      
  ]  
}


