// helpers
var _ = require('lodash')

var marked = require('utils/parse-markdown')
var parseHTML = require('utils/parse-html')

module.exports = function (category, type, relatedEntities, allActions) {
  var pageNum = 0
  var indexOfActions = _.map(allActions, function (value, key) {
    var pageNumToUse = pageNum + 1
    pageNum += _.isEmpty(value.printnoofpages) ? 1 : +value.printnoofpages
    return {id: value.id, pageNum: pageNumToUse}
  })

  var relatedEntitiesIndex = _.map(relatedEntities, function (value, key) {
    var tableOfContents = {
      stack: [
        {columns: [
          {width: '5%', text: value.id, style: 'size10', margin: [10, 10, 0, 0]},
          {width: '68%', text: value.title, style: 'size7_5', margin: [0, 6, 0, 0]},
          {stack: [{image: value.isspecific ? 'icon_specific_yes' : 'icon_specific_no', width: 20, style: 'size7_5'}], width: '3%', margin: [0, 6, 0, 0]},
          {stack: [{image: value.ismeasurable ? 'icon_measurable_yes' : 'icon_measurable_no', width: 20, style: 'size7_5'}], width: '3%', margin: [0, 6, 0, 0]},
          {stack: [{image: value.isassignable ? 'icon_assignable_yes' : 'icon_assignable_no', width: 20, style: 'size7_5'}], width: '3%', margin: [0, 6, 0, 0]},
          {stack: [{image: value.isresultoriented ? 'icon_result_yes' : 'icon_result_no', width: 20, style: 'size7_5'}], width: '3%', margin: [0, 6, 0, 0]},
          {stack: [{image: value.istimebound ? 'icon_time_yes' : 'icon_time_no', width: 20, style: 'size7_5'}], width: '3%', margin: [0, 6, 0, 0]},
          {width: '5%', text: 'B', style: ['size7_5', 'grey'], margin: [12, 12, 0, 0]},
          {width: '5%', text: _.findWhere(indexOfActions, {id: value.id}).pageNum.toString(), style: 'size7_5', margin: [12, 12, 0, 0]}
        ]},
        {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 520, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }], margin: [0, 0]}
      ]
    }
    return tableOfContents
  })
  // Defining the category structures
  var structure = {
    agency: {
      mainTitle: 'ABOUT',
      main: 'description',
      sideTitle: 'WEBSITE',
      side: 'link'
    },
    group: {
      mainTitle: 'COMMENTARY',
      main: 'commentary',
      sideTitle: 'ABOUT THIS GROUP',
      side: 'description'
    },
    issue: {
      mainTitle: 'CURRENT CONTEXT',
      main: 'currentcontext',
      sideTitle: 'OTHER ISSUES RAISED BY CIVIL SOCIETY',
      side: 'otherissuesraised'
    },
    treatyBody: {
      mainTitle: 'ABOUT',
      main: 'description',
      sideTitle: 'CONCLUDING OBSERVATIONS',
      side: 'concludingobservations'
    }
  }

  var categoryContent = [
    {text: type.toUpperCase(), style: ['size10', 'grey', 'bold'], margin: [0, 56, 0, 0]},
    {text: category.title, style: ['size26', 'bold'], margin: [0, 6]},
    {
      columns: [
        {
          stack: [
            {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 325, y2: 5, lineWidth: 0.5 }], margin: [0, 24, 0, 0]},
            {text: structure[type].mainTitle, style: ['blue', 'bold'], margin: [0, 12, 0, 0]},
            {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 325, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }], margin: [0, 7, 0, 0]},
            {stack: parseHTML(marked(category[structure[type].main])), margin: [0, 12, 0, 0]}
          ],
          width: '66%'
        },
        [
          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 170, y2: 5, lineWidth: 0.5 }], margin: [0, 24, 0, 0]},
          {text: structure[type].sideTitle.toUpperCase(), style: ['green', 'bold'], margin: [0, 12, 0, 0]},
          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 170, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }], margin: [0, 7, 0, 0]},
          {stack: parseHTML(marked(category[structure[type].side])), margin: [0, 12, 0, 0]} // todo apply blue style
        ]
      ],
      pageBreak: 'after',
      footerMode: 'category'
    },
    {text: 'ACTION INDEX | ' + type.toUpperCase() + ': ' + category.title.toUpperCase(), style: ['size10', 'grey', 'bold'], margin: [0, 56, 0, 0]},
    {text: relatedEntities.length + ' related Actions', style: ['size26', 'bold'], margin: [0, 0]},
    { columns: [
      {text: 'ID#', style: ['size6', 'grey'], width: '5%'},
      {text: 'GOVERNMENT ACTION', style: ['size6', 'grey'], width: '55%'},
      {text: 'SMART CRITERIA', style: ['size6', 'grey'], width: '30%'},
      {text: 'SECTION', style: ['size6', 'grey'], width: '5%'},
      {text: 'PAGE', style: ['size6', 'grey'], width: '5%'}
    ], margin: [0, 24, 0, 0]},
    {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 520, y2: 5, lineWidth: 0.5 }]},
    { columns: [
      {text: '', style: 'size5_2', width: '60%'},
      {text: 'Specific', style: 'size5_2', width: '5.5%'},
      {text: 'Measurable', style: 'size5_2', width: '5.5%'},
      {text: 'Assignable', style: 'size5_2', width: '5.5%'},
      {text: 'Result-\nOriented', style: 'size5_2', width: '5.5%'},
      {text: 'Time-\nBound', style: 'size5_2', width: '5.5%'},
      {stack: [{text: 'Met', style: 'size5_2', alignment: 'right'}, {text: 'Not met', style: 'size5_2', alignment: 'right'}]},
      {stack: [{image: 'icon_smart_key_yes', width: 7}, {image: 'icon_smart_key_no', width: 7}], width: 7}
    ], margin: [0, 6, 0, 0], columnGap: 2},
    {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 520, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }]},
    {stack: relatedEntitiesIndex, pageBreak: 'after', footerMode: 'category'}
  ]

  return {category: categoryContent, pageLength: 0}
}
