// helpers
var _ = require('lodash')

// util
var parseHTML = require('../parse-html')

module.exports = function (data) {
  
  function getContentItem(item){
    switch (item.type) {
      case 'html' :
        return parseHTML(item.content)
        break
      case 'text' :
        return item.content
        break
      case 'textList' :
        return item.content
        break          
    }    
  }
  
  function getContent(contentList) {
    var content = []   
    _.each(contentList,function(item){
      if (!_.isEmpty(item.content)) {
        content.push({text: item.title, style: ['blue', 'bold'], margin: [0, 10]})
        content.push(getContentItem(item))
      }
      
    })
    return content
  }

  return { 
    stack: [
      {
        text: 'Action ' + data.id,
        style: ['size18', 'bold'], 
        margin: [0, 56, 0, 0]
      },
      {
        text: data.title,
        style: ['size18'], 
        margin: [0, 12, 0, 0]
      },
      {
        columns: [
          {
            stack: [
              {
                canvas: [{ type: 'line', x1: 0, y1: 5, x2: 300, y2: 5, lineWidth: 0.5 }], 
                margin: [0, 18, 0, 0]            
              },
              getContent(data.content)                      
            ],
            width: '66%'
          },
          [
            {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineWidth: 0.5 }], margin: [0, 18, 0, 0]},
            {text: [{text: 'SMART ', style: 'bold'}, {text: 'criteria'}], margin: [0, 12, 0, 0]},
            {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }], margin: [0, 6, 0, 0]},
            {
              columns: [
                {
                  width: '70%', 
                  text: [
                    {text: 'Specific | '}, 
                    {text: data.smart.isspecific ? 'MET' : 'Not met', style: ['size7_5', data.smart.isspecific ? 'green' : 'grey']}
                  ], 
                  margin: [0, 12, 0, 0]
                },
                { 
                  stack: [
                    {image: data.smart.isspecific ? 'smart-s-pass-active' : 'smart-s-fail-active', width: 25}
                  ], 
                  margin: [0, 6, 0, 0]
                }
              ]
            },
            {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }], margin: [0, 6, 0, 0]},
            {
              columns: [
                {
                  width: '70%', 
                  text: [
                    {text: 'Measurable | '}, 
                    {text: data.smart.ismeasurable ? 'MET' : 'Not met', style: ['size7_5', data.smart.ismeasurable ? 'green' : 'grey']}
                  ], 
                  margin: [0, 12, 0, 0]
                },
                { 
                  stack: [
                    {image: data.smart.ismeasurable ? 'smart-m-pass-active' : 'smart-m-fail-active', width: 25}
                  ], 
                  margin: [0, 6, 0, 0]
                }
              ]
            },
            {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }], margin: [0, 6, 0, 0]},
            {
              columns: [
                {
                  width: '70%', 
                  text: [
                    {text: 'Assignable | '}, 
                    {text: data.smart.isassignable ? 'MET' : 'Not met', style: ['size7_5', data.smart.isassignable ? 'green' : 'grey']}
                  ], 
                  margin: [0, 12, 0, 0]
                },
                { 
                  stack: [
                    {image: data.smart.isassignable ? 'smart-a-pass-active' : 'smart-a-fail-active', width: 25}
                  ], 
                  margin: [0, 6, 0, 0]
                }
              ]
            },
            {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }], margin: [0, 6, 0, 0]},
            {
              columns: [
                {
                  width: '70%', 
                  text: [
                    {text: 'Results-oriented | '}, 
                    {text: data.smart.isresultoriented ? 'MET' : 'Not met', style: ['size7_5', data.smart.isresultoriented ? 'green' : 'grey']}
                  ], 
                  margin: [0, 12, 0, 0]
                },
                { 
                  stack: [
                    {image: data.smart.isresultoriented ? 'smart-r-pass-active' : 'smart-r-fail-active', width: 25}
                  ], 
                  margin: [0, 6, 0, 0]
                }
              ]
            },
            {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }], margin: [0, 6, 0, 0]},
            {
              columns: [
                {
                  width: '70%', 
                  text: [
                    {text: 'Timebound | '}, 
                    {text: data.smart.istimebound ? 'MET' : 'Not met', style: ['size7_5', data.smart.istimebound ? 'green' : 'grey']}
                  ], 
                  margin: [0, 12, 0, 0]
                },
                { 
                  stack: [
                    {image: data.smart.istimebound ? 'smart-t-pass-active' : 'smart-t-fail-active', width: 25}
                  ], 
                  margin: [0, 6, 0, 0]
                }
              ]
            },
          ]          
        ],
        pageBreak: 'after',
        footerMode: 'action'
      }      
    ]
  }
}
    
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineWidth: 0.5 }]},
//          {text: [{text: 'ACTION ', style: 'bold'}, {text: 'categories'}], margin: [0, 12, 0, 0]},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }], margin: [0, 6, 0, 0]},
//          {text: titles.issuesTitle, margin: [0, 12, 0, 0]},
//          {text: makeCategoryList(issues), style: 'blue'},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }]},
//          {text: titles.groupsTitle, margin: [0, 12, 0, 0]},
//          {text: makeCategoryList(groups), style: 'blue'},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }]},
//          {text: titles.agenciesTitle, margin: [0, 12, 0, 0]},
//          {text: makeCategoryList(agencies), style: 'blue'},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineWidth: 0.5 }]},
//          {text: [{text: 'Related UPR Recommendations ', style: 'bold'}, {text: '2014'}], margin: [0, 12, 0, 0]},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineWidth: 0.5 }], margin: [0, 6, 0, 0]},
//          {text: 'No.', margin: [0, 12, 0, 0]},
//          {text: action.recommendations.toString().replace(/,/g, ', '), style: 'blue'}
//        ]
//      ],
////    pageBreak: 'after',
////    footerMode: 'action'      
//  ]    
//}

function makeCategoryList (categories) {
  return _.map(categories, function (cat) { return cat.title }).join(', ')
}
