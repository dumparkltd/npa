// helpers
var _ = require('lodash')

// util
var parseHTML = require('../parse-html')

module.exports = function (data, elements) {
  
  function getContentItem(item){
    switch (item.type) {
      case 'html' :
        return parseHTML(item.content)
        break
      case 'text' :
        return item.content
        break
      case 'targetDate' :
        return _.map(item.content,function(c,i){
          return i === 0 ? { text : c, style : ['bold','paragraph']} : c
        })
        break          
    }    
  }      
  function makeCategoryList (categories, split) {
    split = typeof split !== 'undefined' ? split : ' | '
    return _.map(categories, function (cat) { return cat }).join(split)
  }  
  var customElements = {    
    header : function(id) {
      return {
        columns : [
          {
            stack: [ { text: 'GOVERNMENT ACTION', style: 'itemSupTitle' } ],
            width:427
          },
          {
            table : {
              widths: [ '100%'],
              body : [
                [{ text: 'ACTION', style : 'pageIdTableCellType' }],
                [ { text: id,  style : 'pageIdTableCellId' }]
              ]
            },
            layout: 'noBorders',
            style : 'pageIdTable',
            width:63
          }
        ]
      }
    },
    content : function(contentList) {
      var content = []   
      _.each(contentList,function(item){
        if (!_.isEmpty(item.content)) {
          content.push({text: item.title.toUpperCase(), style: ['itemContentSectionTitle','green'] })
          content.push(getContentItem(item))
        }

      })
      return content
    },
    smart : function(smart) {      
      return {
        table : {
          widths: [ 103,50],
          body : [
            [{ text: 'SMART criteria', colSpan: 2, style : ['sideTableCellTitle','sideTableCell'] },''],
            [ {canvas: [{ type: 'line', x1: 0, y1: 0, x2: 143, y2: 0, lineWidth: 0.5, lineColor :'#fff' }],colSpan:2,style:'sideTableCell'},''],
            [ 
              {
                text :'Specific',
                style : ['sideTableCell']   
              },
              {
                image: smart.isspecific ? 'smart-s-pass-active-bg' : 'smart-s-fail-active-bg', 
                rowSpan : 2,width: 25,style : ['sideTableCell']   
              }
            ],
            [ 
              {
                text : smart.isspecific ? 'Met' : 'Not met',
                style : ['sideTableCell', smart.isspecific ? 'green' : 'grey' ]   
              },
              ''
            ],
            [ {canvas: [{ type: 'line', x1: 0, y1: 0, x2: 143, y2: 0, lineWidth: 0.5, lineColor :'#fff' }],colSpan:2,style:'sideTableCell'},''],
            [ 
              {
                text :'Measurable',
                style : ['sideTableCell']   
              },
              {
                image: smart.ismeasurable ? 'smart-m-pass-active-bg' : 'smart-m-fail-active-bg', 
                rowSpan : 2,width: 25,style : ['sideTableCell']      
              }
            ],
            [ 
              {
                text : smart.ismeasurable ? 'Met' : 'Not met',
                style : ['sideTableCell', smart.ismeasurable ? 'green' : 'grey' ]   
              },
              ''
            ],
            [ {canvas: [{ type: 'line', x1: 0, y1: 0, x2: 143, y2: 0, lineWidth: 0.5, lineColor :'#fff' }],colSpan:2,style:'sideTableCell'},''],
            [ 
              {
                text :'Assignable',
                style : ['sideTableCell']   
              },
              {
                image: smart.isassignable ? 'smart-a-pass-active-bg' : 'smart-a-fail-active-bg', 
                rowSpan : 2,width: 25,style : ['sideTableCell']     
              }
            ],
            [ 
              {
                text : smart.isassignable ? 'Met' : 'Not met',
                style : ['sideTableCell', smart.isassignable ? 'green' : 'grey' ]   
              },
              ''
            ],
            [ {canvas: [{ type: 'line', x1: 0, y1: 0, x2: 143, y2: 0, lineWidth: 0.5, lineColor :'#fff' }],colSpan:2,style:'sideTableCell'},''],
            [ 
              {
                text :'Results-oriented',
                style : ['sideTableCell']   
              },
              {
                image: smart.isresultoriented ? 'smart-r-pass-active-bg' : 'smart-r-fail-active-bg', 
                rowSpan : 2,width: 25,style : ['sideTableCell']      
              }
            ],
            [ 
              {
                text : smart.isresultoriented ? 'Met' : 'Not met',
                style : ['sideTableCell', smart.isresultoriented ? 'green' : 'grey' ]   
              },
              ''
            ],
            [ {canvas: [{ type: 'line', x1: 0, y1: 0, x2: 143, y2: 0, lineWidth: 0.5, lineColor :'#fff' }],colSpan:2,style:'sideTableCell'},''],
            [ 
              {
                text :'Timebound',
                style : ['sideTableCell']   
              },
              {
                image: smart.istimebound ? 'smart-t-pass-active-bg' : 'smart-t-fail-active-bg', 
                rowSpan : 2,width: 25,style : ['sideTableCell']      
              }
            ],
            [ 
              {
                text : smart.istimebound ? 'Met' : 'Not met',
                style : ['sideTableCell', smart.istimebound ? 'green' : 'grey' ]   
              },
              ''
            ]
          ]
        },
        layout: 'noBorders',
        style : 'sideTable',
        width:163
      }
    },
    categories : function(categories){
      return{
        table : {
          widths: [ 163],
          body : [
            [{ text: 'Action Categories', style : ['sideTableCellTitle','sideTableCell'] }],
            [ { canvas: [{ type: 'line', x1: 0, y1: 0, x2: 143, y2: 0, lineWidth: 0.5, lineColor :'#fff' }],style:'sideTableCell'}],
            [ { text : categories.issues.length === 1 ? 'Issue' : 'Issues', style : ['sideTableCell'] }],
            [ { text : makeCategoryList(categories.issues), style : ['sideTableCell', 'green' ] } ],
            [ { canvas: [{ type: 'line', x1: 0, y1: 0, x2: 143, y2: 0, lineWidth: 0.5, lineColor :'#fff' }],style:'sideTableCell'}],            
            [ { text : categories.groups.length === 1 ? 'Population Group' : 'Population Group', style : ['sideTableCell'] }],
            [ { text : makeCategoryList(categories.groups), style : ['sideTableCell', 'green' ] }],
            [ { canvas: [{ type: 'line', x1: 0, y1: 0, x2: 143, y2: 0, lineWidth: 0.5, lineColor :'#fff' }],style:'sideTableCell'}],            
            [ { text : categories.agencies.length === 1 ? 'Government Agency' : 'Government Agencies', style : ['sideTableCell'] }],
            [ { text : makeCategoryList(categories.agencies), style : ['sideTableCell', 'green' ] } ]
          ]
        },
        layout: 'noBorders',
        style : 'sideTable',
        width:163
      }        
      
    },
    recommendations : function(recs){
      return {
        table : {
          widths: [ 163],
          body : [
            [ { text: 'Addressed UPR Recommendation' + (recs.length !== 1 ? 's' : ''), style : ['sideTableCellTitle','sideTableCell'] }],
            [ {canvas: [{ type: 'line', x1: 0, y1: 0, x2: 143, y2: 0, lineWidth: 0.5, lineColor :'#fff' }],style:'sideTableCell'}],
            [ { text : 'No.', style : ['sideTableCell'] } ],
            [ { text : makeCategoryList(recs,', '), style : ['sideTableCell', 'blue' ] }]
          ]
        },
        layout: 'noBorders',
        style : 'sideTable',
        width :163
      }
    }
  }
  elements = _.extend (elements,customElements)
  
  return [
    elements.header(data.id),
    {
      text: data.title,
      style: 'itemTitleAction'
    },
    {
      columns: [
        {
          stack: [
           elements.lines.contentBorderTop,
           elements.content(data.content)                      
          ],
          width: 320
        },
        {
          stack : [
            elements.smart(data.smart),
            elements.categories(data.categories),
            elements.recommendations(data.recommendations)
          ]          
        }                  
      ]
    }      
  ]  
}


