// helpers
var _ = require('lodash')

// util
var parseHTML = require('../parse-html')

module.exports = function (data) {
  
  function getContentItem(item){
    switch (item.type) {
      case 'html' :
        return parseHTML(item.content)
        break
      case 'text' :
        return item.content
        break
      case 'textList' :
        return item.content
        break          
    }    
  }
  
  function getContent(contentList) {
    var content = []   
    _.each(contentList,function(item){
      if (!_.isEmpty(item.content)) {
        content.push({text: item.title, style: ['blue', 'bold'], margin: [0, 10]})
        content.push(getContentItem(item))
      }
      
    })
    return content
  }

  return [
    {
      text: 'Action ' + data.id,
      style: ['size18', 'bold'], 
      margin: [0, 56, 0, 0]
    },
    {
      text: data.title,
      style: ['size18'], 
      margin: [0, 12, 0, 0]
    },
    {
      columns: [
        {
          stack: [
            {
              canvas: [{ type: 'line', x1: 0, y1: 5, x2: 300, y2: 5, lineWidth: 0.5 }], 
              margin: [0, 18, 0, 0]            
            },
            getContent(data.content)                      
          ],
          width: '66%'
        }
      ],
      pageBreak: 'after',
      footerMode: 'action'
    }      
  ]    
}
    
//        ,
//        [
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineWidth: 0.5 }], margin: [0, 18, 0, 0]},
//          {text: [{text: 'SMART ', style: 'bold'}, {text: 'criteria'}], margin: [0, 12, 0, 0]},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }], margin: [0, 6, 0, 0]},
//          {columns: [
//            {width: '70%', text: [{text: 'Specific | '}, {text: action.isspecific ? 'MET' : 'Not met', style: ['size7_5', action.isspecific ? 'green' : 'grey']}], margin: [0, 12, 0, 0]},
//            {stack: [{image: action.isspecific ? 'icon_specific_yes' : 'icon_specific_no', width: 26}], margin: [0, 6, 0, 0]}
//          ]},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }]},
//          {columns: [
//            {width: '70%', text: [{text: 'Measurable | '}, {text: action.ismeasurable ? 'MET' : 'Not met', style: ['size7_5', action.ismeasurable ? 'green' : 'grey']}], margin: [0, 12, 0, 0]},
//            {stack: [{image: action.ismeasurable ? 'icon_measurable_yes' : 'icon_measurable_no', width: 26}], margin: [0, 6, 0, 0]}
//          ]},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }]},
//          {columns: [
//            {width: '70%', text: [{text: 'Assignable | '}, {text: action.isassignable ? 'MET' : 'Not met', style: ['size7_5', action.isassignable ? 'green' : 'grey']}], margin: [0, 12, 0, 0]},
//            {stack: [{image: action.isassignable ? 'icon_assignable_yes' : 'icon_assignable_no', width: 26}], margin: [0, 6, 0, 0]}
//          ]},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }]},
//          {columns: [
//            {width: '70%', text: [{text: 'Result-oriented | '}, {text: action.isresultsoriented ? 'MET' : 'Not met', style: ['size7_5', action.isresultsoriented ? 'green' : 'grey']}], margin: [0, 12, 0, 0]},
//            {stack: [{image: action.isresultsoriented ? 'icon_result_yes' : 'icon_result_no', width: 26}], margin: [0, 6, 0, 0]}
//          ]},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }]},
//          {columns: [
//            {width: '70%', text: [{text: 'Time-bound | '}, {text: action.istimebound ? 'MET' : 'Not met', style: ['size7_5', action.istimebound ? 'green' : 'grey']}], margin: [0, 12, 0, 0]},
//            {stack: [{image: action.istimebound ? 'icon_time_yes' : 'icon_time_no', width: 26}], margin: [0, 6, 0, 0]}
//          ]},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineWidth: 0.5 }]},
//          {text: [{text: 'ACTION ', style: 'bold'}, {text: 'categories'}], margin: [0, 12, 0, 0]},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }], margin: [0, 6, 0, 0]},
//          {text: titles.issuesTitle, margin: [0, 12, 0, 0]},
//          {text: makeCategoryList(issues), style: 'blue'},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }]},
//          {text: titles.groupsTitle, margin: [0, 12, 0, 0]},
//          {text: makeCategoryList(groups), style: 'blue'},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineColor: '#9aa6a6', lineWidth: 0.5 }]},
//          {text: titles.agenciesTitle, margin: [0, 12, 0, 0]},
//          {text: makeCategoryList(agencies), style: 'blue'},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineWidth: 0.5 }]},
//          {text: [{text: 'Related UPR Recommendations ', style: 'bold'}, {text: '2014'}], margin: [0, 12, 0, 0]},
//          {canvas: [{ type: 'line', x1: 0, y1: 5, x2: 160, y2: 5, lineWidth: 0.5 }], margin: [0, 6, 0, 0]},
//          {text: 'No.', margin: [0, 12, 0, 0]},
//          {text: action.recommendations.toString().replace(/,/g, ', '), style: 'blue'}
//        ]
//      ],
////    pageBreak: 'after',
////    footerMode: 'action'      
//  ]    
//}

function makeCategoryList (categories) {
  return _.map(categories, function (cat) { return cat.title }).join(', ')
}
