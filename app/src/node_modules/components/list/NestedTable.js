//main
var React     = require('react')

//components
var TableCellText		  = require('components/list/TableCellText')
var TableCellIcon		  = require('components/list/TableCellIcon')
var TableCellBar		  = require('components/list/TableCellBar')
var TableCellBarRatio	= require('components/list/TableCellBarRatio')

var Load = require('components/load')
//helpers
var _           = require('lodash')
var log         = require('debug')('src:components:NestedTable')



var NestedTable = React.createClass({

  propTypes : {
    cols: React.PropTypes.array,    
    row: React.PropTypes.array,
    className: React.PropTypes.string    
  },

  render: function () {    
    log('props',this.props)
    
    
    return (
        <div className={"hrc-table-nested " + this.props.className }>
          <div className="hrc-tbody">
            <div >
              {
                _.map(this.props.cols,function(col,i){
                  var classes = 'hrc-td hrc-cell hrc-cell-' + col.type
                        + (col.hiddenXS ? ' hidden-xs' : '')               
                        + (col.visibleXS ? ' visible-xs' : '')               
                  return (
                    <div key={i} className={classes}>
                      {this.renderCell(col)}
                    </div>
                  )
                },this)
              }
            </div>
          </div>
        </div>
    )
      
  },
  renderCell:function(col) {
    var row = this.props.row
    if ( col.type === 'no' || col.type === 'label') {
      return row[col.attr]    
    } else if ( col.type === 'text') {
      return ( 
              <TableCellText 
                text={row[col.attr]}
              />
      )
    } else if ( col.type === 'icon') {
      return (
              <TableCellIcon
                col={col}
                row={row} />                
            )
    } else if ( col.type === 'bar' ) {      
      return (
              <TableCellBar
                col={col}
                row={row} />                
            )
      
    } else if ( col.type === 'ratio-bar' ) {
      
      return (
              <TableCellBarRatio
                col={col}
                row={row} />                
            ) 
      
    } else if ( col.type === 'links' 
            || col.type === 'key-links'  ) {
      return (
        <span className="icon-arrow-link"></span>
      )
    } else {
      return null
    }
  },      
  
})

module.exports = NestedTable;
