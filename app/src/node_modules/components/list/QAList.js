//react
var React           = require('react')
var Fluxxor         = require('fluxxor')

//helpers
var _   = require('lodash')
var log = require('debug')('src:components:faq')
var marked = require('utils/parse-markdown')


module.exports = React.createClass({
  mixins: [
    Fluxxor.FluxMixin(React),    
  ],    
  propTypes : {
    entities: React.PropTypes.array
  },
  componentDidMount : function(){
    if (this.refs.innerHTML) {
      inner.addEventListener('click', this.clickInnerHtml);
    }
  },  
  render: function () {
    log('props, state', this.props, this.state)
    
    return (
      <div className='faq-list'  ref='innerHTML'>
        {
          _.map(this.props.entities,function(entity,key){
            return (
              <div key={key} className='faq-row'>
                <h3>{entity.id + '. ' + entity.question}</h3>
                <div className='marked-inner-html'
                  dangerouslySetInnerHTML={{
                    __html: marked(entity.answer, {sanitize: true})
                  }} >
                </div>
              </div>
            )                
          }, this)
        }        
      </div>
    )
    
  },
  clickInnerHtml : function(e){
    if (e.target.hash) {
      if (/^#/.test(e.target.hash)) {
        
        var split = e.target.hash.split('/')
        if (split.length > 1) {
          e.preventDefault()
          var route = split[1]
          var slug
          if (split.length > 1) {
            slug = split[2]
          }        
          this.getFlux().actions.navigate(route,slug)          
        }
        
      }
    }
  } 
  
  
})
