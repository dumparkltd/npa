//main
var React       = require('react')

//bootstrap
var Grid        = require('react-bootstrap/lib/Grid')
var Row         = require('react-bootstrap/lib/Row')
var Col         = require('react-bootstrap/lib/Col')

//helper
var log         = require('debug')('components:footer')

module.exports = React.createClass({

  propTypes: {
    shouldHide: React.PropTypes.bool,
    infoText: React.PropTypes.string,
    infoEmail: React.PropTypes.string,
    dumparkLink: React.PropTypes.string,
    parentSiteText: React.PropTypes.string,
    parentSiteLink: React.PropTypes.string,
    parentSiteURL: React.PropTypes.string,
  },

  render: function () {
//    log('props', this.props)
    var newTab = ' (opens in new tab)'
		return (
      <footer role="contentinfo" className={this.props.shouldHide ? "hide" : "hrc-footer" }>
  			<Grid>
          <Row className="hrc-footer-row">
            <Col sm={4} className='hrc-footer-info hrc-footer-item'>
              <p>{this.props.infoText}<a href={'mailto:'+this.props.infoEmail}>{this.props.infoEmail}</a></p>
            </Col>
            <Col sm={4} className='hrc-footer-parentsite hrc-footer-item'>
              <p>{this.props.parentSiteText}</p>              
              <a className="link-large"
                title={this.props.parentSiteAnchorText + newTab} 
                href={this.props.parentSiteURL} target="_blank">
                {this.props.parentSiteAnchorText}
              </a>
            </Col>
            <Col sm={4} className="hrc-footer-brand hrc-footer-item">
              <div className="hrc-footer-brand-logo">
                <a title={this.props.parentSiteAnchorText + newTab} 
                  href={this.props.parentSiteURL} 
                  className="icon-hrc-logo" target="_blank"></a>
              </div>
            </Col>
          </Row>
          <Row className="hrc-footer-row hrc-footer-row-builtby">
            <Col sm={12} className='hrc-footer-builtby-wrap'>
              <a title={"interactive by dumpark " + newTab} className="builtby small" href="http://dumpark.com" target="_blank">
                interactive by <strong>dumpark</strong>
              </a>
            </Col>
          </Row>
        </Grid>
      </footer>

    )
  },

  handleNavClick: function (page) {
    var flux = this.props.flux

    return function (e) {
      e.preventDefault()
      flux.actions.navPage(page)
    }
  }


})
