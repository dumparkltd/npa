//react
var React       = require('react')
var Fluxxor     = require('fluxxor')

// components
var ShareModal      = require('components/share-modal')
var NavPrimary      = require('components/nav/nav-primary')

// bootstrap
var Grid            = require('react-bootstrap/lib/Grid')
var Navbar          = require('react-bootstrap/lib/Navbar')
var Nav             = require('react-bootstrap/lib/Nav')
var NavItem         = require('react-bootstrap/lib/NavItem')

//helpers
var _           = require('lodash')
var log         = require('debug')('components:header')

module.exports = React.createClass({

  mixins: [
    Fluxxor.FluxMixin(React)
  ],
  propTypes: {
    currentHREF : React.PropTypes.string,
    route       : React.PropTypes.string,
    param       : React.PropTypes.string,
    title       : React.PropTypes.string,
    subtitle    : React.PropTypes.string
  },
  initialise : function(){
    // warning: dirty hack to close navbar toggle on route change
    this.route = ''
    this.param = ''
    this.expanded = false
    // end hack
  },
  getInitialState: function () {
    return {
      hideShareModal: true,
      navExpanded: false
    }
  },

  render: function () {
    log('props', this.props, window.location)

    // warning: dirty hack to close navbar toggle on route change
    //    navExpanded will always override state in NavBar React-Bootstrap component

    var expanded
    if (this.route !== this.props.route
            || this.param !== this.props.param) {
      expanded = false
      this.route = this.props.route
      this.param = this.props.param
      this.expanded = false
    } else {
      expanded = this.state.navExpanded
    }
    //end hack

    var tweet = "Check out what NZ is doing to improve human rights"
    var title = "NZ Human Rights National Plan of Action"

    var rootURI = window.location.protocol+'//'+window.location.host+'/'
    var encodedRootURI = encodeURIComponent(rootURI)
    var facebookShare = "https://www.facebook.com/sharer/sharer.php?u=" + encodedRootURI
    var twitterShare = "https://twitter.com/intent/tweet?status=" + encodeURIComponent(tweet) + " " + encodedRootURI + " " + encodeURIComponent("@NZHumanRights")
    var linkedinShare = "https://www.linkedin.com/shareArticle?mini=true&url=" + encodedRootURI + "&title=" + encodeURIComponent(title)

    var headerClass = this.isIntro() ? 'hrc-header header-intro' : 'hrc-header'

    headerClass += expanded ? ' expanded' : ''

    return (
        <header className={headerClass}>
          <Navbar
            className='hrc-navbar'
            onToggle={this.handleNavToggle}
            expanded={expanded}
          >
            <Navbar.Header>
              <Navbar.Brand>
                <div className='header-brand-title'>                
                  { !this.isIntro() ? 
                    (
                      <a role="button" title="NPA home" className='hrc-title-link' onClick={this.handleNavClick('home')} href='#' >
                        <h1 className="hrc-title">{this.props.title}</h1>
                        <div className="hrc-subtitle">{this.props.subtitle}</div>
                      </a>

                    ) : (
                      <div className='hrc-title-link hrc-title-link-inactive'>
                        <h1 className="hrc-title">{this.props.title}</h1>
                        <div className="hrc-subtitle">{this.props.subtitle}</div>
                      </div>
                    )
                  }
                </div>
              </Navbar.Brand>
              <Navbar.Toggle/>     
            </Navbar.Header>
            <Navbar.Collapse eventKey={0} expanded={false}>
              {this.renderPagesNavGroup()}
              {this.renderShareNavGroup(facebookShare,twitterShare)}
            </Navbar.Collapse>
          </Navbar>
          <ShareModal
            currentHREF=      {this.props.currentHREF}
            shouldHide=       {this.state.hideShareModal}
            facebookShare =   {facebookShare}
            twitterShare =    {twitterShare}
            linkedinShare =   {linkedinShare}
            toggleShareModal= {this.toggleShareModal}
          />
          <NavPrimary/>
        </header>

    )
  },
  isIntro : function(){
    return this.props.route === 'intro'
  },
  
  renderShareNavGroup : function(facebookShare,twitterShare) {
    var shareClass =  'nav-item-share'
    return (
      <Nav className={"nav-group nav-group-share"} navbar>
        <NavItem title="Open share dialogue" eventKey={3} href='#' className={shareClass} onClick={this.toggleShareModal()} >
          Share
        </NavItem>
        <NavItem title="Share on Facebook" eventKey={1} href={facebookShare} className="share-header-social share-header-social-facebook hidden-xs"  target="_blank">          
          <span className='hrc-icons_facebook'/>          
        </NavItem>
        <NavItem title="Share on Twitter" eventKey={2} href={twitterShare} className="share-header-social share-header-social-twitter hidden-xs"  target="_blank">          
          <span className='hrc-icons_twitter'/>            
        </NavItem>
      </Nav>
    ) 
  },
  renderPagesNavGroup : function() {
    return (
      <Nav className={"nav-group nav-group-pages"} navbar>
        <NavItem
            title="Page: About"
            eventKey={1}
            href='#'
            active = {this.props.param === 'about'}
            className={'nav-item-about'}
            onClick={this.handleNavClick('about')}>
          About
        </NavItem>
        <NavItem
            title="Page: Human Rights Articles"
            eventKey={2}
            href='#'
            className={'nav-item-articles'}
            active = {this.props.param === 'articles'}
            onClick={this.handleNavClick('articles')}>
          Human Rights Articles
        </NavItem>
        <NavItem
            title="Page: Frequently asked questions"
            eventKey={3}
            href='#'
            className={'nav-item-faq'}
            active = {this.props.param === 'faq'}
            onClick={this.handleNavClick('faq')}>
          FAQ
        </NavItem>
      </Nav>
    )
  },

  handleNavToggle : function(){
    log('handleNavToggle', !this.state.navExpanded)
    // warning: dirty hack to close navbar toggle on route change
    if (!this.expanded) {
      this.expanded = true
      this.setState({
        navExpanded: true
      });
    } else {
      this.expanded = false
      this.setState({
        navExpanded: false
      });
    }
    //end hack


  },
  handleNavClick: function (page) {
    var flux = this.getFlux()

    return function (e) {
      e.preventDefault()
      flux.actions.navPage(page)
    }
  },

  toggleShareModal: function () {
    var self = this
    return function (e) {
      e.preventDefault()
      self.setState({ hideShareModal: !self.state.hideShareModal })
    }
  }


})
