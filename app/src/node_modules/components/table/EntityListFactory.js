var React       = require('react')
var Fluxxor     = require('fluxxor')

// components
var EntityTableWrap = require('components/table/EntityTableWrap')

//util
var getColumns = require('utils/getColumns')


//helpers
var _           = require('lodash')
var log         = require('debug')('src:components:EntityListFactory')



var EntityListFactory = React.createClass({
  
  mixins: [
    Fluxxor.FluxMixin(React)  
  ],
  
  propTypes : {
    relatedType: React.PropTypes.string,
    relatedEntities : React.PropTypes.array,
    showEmpty : React.PropTypes.bool,
    showCount: React.PropTypes.bool,
    collapsible : React.PropTypes.bool, 
    linked : React.PropTypes.bool,
    detailed : React.PropTypes.bool,
    handleRowClick : React.PropTypes.func
  },
  
  render: function () {    
//    log('props',this.props)
    var flux = this.getFlux()
    var relatedEntities  = this.props.relatedEntities
    var relatedType = this.props.relatedType
    var store = flux.store(relatedType)
    
    
    if (relatedEntities.length === 0){
      if (!this.props.showEmpty) {
        return null       
      } else {
        return (   
          <h2>{
            (this.props.showCount 
              ? relatedEntities.length + ' ' 
              : '') 
            + 'Related ' + store.getTitle(relatedEntities.length)}
          </h2>
        )
      }
    } else { 
      var caption
      if (this.props.showCount) {
        caption = (
          <span>
            <span className='table-caption-highlight'>{relatedEntities.length + ' '}</span>
            {'Related ' + store.getTitle(relatedEntities.length)}
          </span>
        )
      } else {
          <span>
            {'Related ' + store.getTitle(relatedEntities.length)}
          </span>      
      }       
      return (<div>
          
          <EntityTableWrap
            caption = {caption}
            showMoreLabel={relatedType}
            collapsible={this.props.collapsible}  
            className={relatedType + '-table'}
            linked = {this.props.linked}
            cols = {getColumns(relatedType,flux,relatedEntities,this.props.detailed)}            
            rows = {relatedEntities} 
            entityType = {relatedType}
            handleRowClick = {this.props.handleRowClick}
          />
          
      </div>)
    }
      
  },
       
})

module.exports = EntityListFactory;
