//main
var React     = require('react')

//helpers
var _           = require('lodash')
var log         = require('debug')('src:components:entityListCellBar')



var TableHeaderCellKey = React.createClass({

  propTypes : {    
    cellKey: React.PropTypes.object    
  },
  
  render: function () {    
//    log('props',this.props)
        
    return (
      <div className={'cell-key-wrap' + (this.props.cellKey.hiddenXS ? ' hidden-xs' : '')}>
       {this.renderKey()}
      </div>
    )
  },
  renderKey : function() {
    var key = this.props.cellKey
    if (key.type === 'units') {
      return (
        <div className="cell-key">
          { _.map(key.items,function(item,i){
              return (
                <div key={i} className="cell-key-item">
                  <span className="cell-key-item-block" style={{backgroundColor:item.color}}/>
                  <span className="cell-key-item-title" >{item.title}</span>
                </div>
              )
            })    
          }
        </div>
      )
    }
    else if (key.type === 'icons') {
      return (
        <div className="cell-key">
          { _.map(key.items,function(item,i){
              return (
                <div key={i} className="cell-key-item">
                  <span className={"cell-key-item-icon " + item.class} />
                  <span className="cell-key-item-title" >{item.title}</span>
                </div>
              )
            })    
          }
        </div>
      )
    }
    else if (key.type === 'no') {
      return (
        <div className="cell-key">
          { _.map(key.items,function(item,i){
              return (
                <div  key={i} className="cell-key-item">
                  <span className={"strong cell-key-item-no " + item.class} style={{color:item.color}}>{item.no}</span>
                  <span className="cell-key-item-title" >{item.title}</span>
                </div>
              )
            })    
          }
        </div>
      )
    }
    else {
      return null
    }
  }
})


module.exports = TableHeaderCellKey;