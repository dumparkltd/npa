//main
var React     = require('react')

//components
var EntityTable = require('components/table/EntityTable')
var ShowMore = require('components/show-more')

//helpers
var _           = require('lodash')
var log         = require('debug')('src:components:entityList')



var EntityTableWrap = React.createClass({

  propTypes : {
    cols: React.PropTypes.array,
    rows: React.PropTypes.array,
    className: React.PropTypes.string,
    linked:React.PropTypes.bool,
    collapsible:React.PropTypes.bool,
    maxItems:React.PropTypes.number,
    showMoreLabel: React.PropTypes.string,
    caption:React.PropTypes.object,
    handleRowClick : React.PropTypes.func
  },

  getInitialState: function () {
    return {
      collapsed: true
    }
  },
  componentWillReceiveProps: function (nextProps) {
    //collapse main text when switching between indicators
    if (!this.state.collapsed && nextProps.id !== this.props.id) {
      this.setState({ collapsed: true })
    }
  },
//  componentDidMount: function() {
//    if (typeof this.props.caption !== 'undefined' && this.props.caption !== '' ) {
//      this.getDOMNode().setAttribute('summary', "Table: " + this.props.caption)
//    }      
//  },
  render: function () {
    log('props',this.props)
//
    var className = typeof this.props.className !== 'undefined' ? this.props.className : ''
    var collapsible = typeof this.props.collapsible !== 'undefined' ? this.props.collapsible : true
    var maxItems = typeof this.props.maxItems !== 'undefined' ? this.props.maxItems : 5
    var ariaHidden = typeof this.props.ariaHidden !== 'undefined' ? this.props.ariaHidden : "false"


    var visibleRows = (collapsible & this.state.collapsed)
    ? this.props.rows.slice(0,maxItems)
    : this.props.rows

    return (
      <div className={"hrc-table-wrap " +className} aria-hidden={ariaHidden} >
        <h2>{this.props.caption}</h2>
        <EntityTable
          cols = {this.props.cols}
          rows = {visibleRows}
          linked = {this.props.linked}
          handleRowClick = {this.props.handleRowClick}
        />
        <ShowMore
          toggleCollapse = {this.toggleCollapse}
          collapsed = {this.state.collapsed}
          collapsible = {collapsible}
          maxItems = {maxItems}
          totalItems = {this.props.rows.length}
          showMoreLabel = {this.props.showMoreLabel}
        />
      </div>
    )
  },

  toggleCollapse: function (e) {
    e.preventDefault()
    this.setState({ collapsed: !this.state.collapsed })
  }


})

module.exports = EntityTableWrap;
