var getSMARTicon = require('utils/getSMARTicon')
var _           = require('lodash')

module.exports = function(type,flux,relatedEntities,detailed) {
  var detailed = typeof detailed !== 'undefined' ? detailed : true  
  var handleNavClick = function (page) {
    return function (e) {
      e.preventDefault()
      flux.actions.navPage(page)
    }
  }
  
  if (type === 'actions') {
    if (detailed) {
      // SMART columns
      var col_s = {type : 'icon', hiddenXS : true, title : 'S', attr : 'isspecific', 
        class : getSMARTicon('class'),
        label : getSMARTicon('label')}
      var col_m = {type : 'icon', hiddenXS : true, title : 'M', attr : 'ismeasurable', 
        class : getSMARTicon('class'),
        label : getSMARTicon('label')}
      var col_a = {type : 'icon', hiddenXS : true, title : 'A', attr : 'isassignable', 
        class : getSMARTicon('class'),
        label : getSMARTicon('label')}
      var col_r = {type : 'icon', hiddenXS : true, title : 'R', attr : 'isresultoriented', 
        class : getSMARTicon('class'),
        label : getSMARTicon('label')}
      var col_t = {type : 'icon', hiddenXS : true, title : 'T', attr : 'istimebound', 
        class : getSMARTicon('class'),
        label : getSMARTicon('label')}              

      // ID column
      var col_id = {type:'no',   title: 'Id', attr:'id'}

      // title column with nested table
      var col_title = {
        type:'text', 
        title: 'Action', 
        attr:'title',      
        nestAfter : {
          visibleXS : true,
          cols : [ 
            _.extend({},col_s,{hiddenXS:false}),              
            _.extend({},col_m,{hiddenXS:false}),              
            _.extend({},col_a,{hiddenXS:false}),              
            _.extend({},col_r,{hiddenXS:false}),              
            _.extend({},col_t,{hiddenXS:false})
          ]              
        }
      }

      var col_links = { 
        type: 'link-links',
        link : {
          title : 'About SMART criteria',
          hiddenTitle : true,
          icon : 'icon-information',
          onClick : handleNavClick('smart')
        }


      }

      return [ col_id, col_title, col_s, col_m, col_a, col_r, col_t, col_links ] 
    } else {    
      return [
        {type:'no',   title: 'Id', attr:'id'},
        {type:'text', title: 'Action', attr:'title'},
        {type:'links'}
      ]
    }
  
  
  } else if (type === 'recommendations') {
    
    if (detailed) {
      var recs = relatedEntities

      var countRecsAccepted = recs.filter(function(entity) {
        return entity.response === 'Accepted'
      }).length

      var countRecsRejected = recs.length - countRecsAccepted

      return [
        {type:'no', title: 'No.', attr:'id'},            
        {type:'text', title: 'Recommendation', attr:'title'},
        {type:'icon', title: 'Response', attr:'response', 
          class: function(response){
            // function will be evaluated in cell
            return (response === 'Accepted') ? 'icon-accepted' : 'icon-rejected'  
          }, 
          label: function(response){
            // function will be evaluated in cell
            return (response === 'Accepted') ? 'Response: Accepted' : 'Response: Not Accepted'  
          },
          key: {
            type:'no',
            hiddenXS : true,
            items: [{
                title:'Accepted',
                no: countRecsAccepted,
                color:'#E19900'
              },
              {
                title:'Not Accepted',
                no: countRecsRejected,
                color:'#AEBCC1' 
              }
            ] 
          }
        },
        {type:'links'}
      ]
    } else {
      return [
        {type:'no', title: 'No.', attr:'id'},            
        {type:'text', title: 'Recommendation', attr:'title'},
        {type:'links'}
      ]
    }
  } else if (type === 'articles') {
    if (detailed) {
      return [
        {type:'no', title: 'No.', attr:'id'},            
        {type:'text', title: 'UDHR Article',  attr:'title',
          nestAfter : {
            visibleXS:true,
            cols:[{type:'text', attr:'titlemaori', className:'italic'}]
          }
        },
        {type:'text', title: '', attr:'titlemaori', className:'italic',hiddenXS:true},
        {type:'links'}                
      ]  
    } else {
      return [
        {type:'no', title: 'No.', attr:'id'},            
        {type:'text', title: 'UDHR Article',  attr:'title'},
        {type:'links'}
      ]
    }
  } else if (type === 'issues' || type === 'groups' || type === 'agencies' || type === 'treatybodies') {
    return [
      {type:'text', title: 'Category', attr:'title'},
      {type:'links'}              
    ]  
  } else if (type === 'terms') {
    return [
      {type:'label', title: 'Term',       attr:'title'},
      {type:'text',  title: 'Definition', attr:'definition'},
      {type:'links'}
    ]
  } else if (type === 'pages') {
    return [
      {type:'text', title: 'Name', attr:'title'},
      {type:'text', title: 'Lead', attr:'lead'},
      {type:'links'}
    ]
  }
}

