// helpers
var log       = require('debug')('actions')


// define routes
var c = {
  ROUTE: {
    TRANSITION: "ROUTE:TRANSITION",
    GOBACK: "ROUTE:GOBACK",
    UPDATE_QUERY: "ROUTE:UPDATE_QUERY",
    DELETE_FROM_QUERY:"ROUTE:DELETE_FROM_QUERY"
  },
  PRINT: "PRINT"
};

var methods = {
  // select single entity
  entity: {
    select : function (type,id) {
      this.flux.actions.navigate(type,id)
    }
  },
  navigate: function(route,slug) {
    var params = (typeof slug === 'undefined') ? {} : {id:slug}

    this.dispatch(c.ROUTE.TRANSITION, { route: route, params:params });
  },
  // entity overview by category
  'explore-by':this.exploreby,
  exploreby:  function (category) {
    this.flux.actions.navigate('explore-by',category)
  },
  // navigate to page
  navPage: function (page){
    log('navPage', page)
    if (page === 'home') {
      this.dispatch(c.ROUTE.TRANSITION, { route: '/' })
    } else {
      this.flux.actions.navigate('page',page)
    }

  },
  // navigate back
  navigateBack : function () {
    this.dispatch(c.ROUTE.GOBACK,{})    
  },
  multiselect : function (field,values) {
    this.flux.actions.query(field,values)
  },
  date : function (field,date_str) {
    this.flux.actions.query(field,date_str)
  },
  query : function (field,value) {
    this.dispatch(c.ROUTE.UPDATE_QUERY,{field:field,values:value})      
  },
  deleteFromQuery : function (fields) {
    this.dispatch(c.ROUTE.DELETE_FROM_QUERY,{fields:fields})  
  },
  export: function (printArgs) {
    this.dispatch(c.PRINT, printArgs)       
  }
};

module.exports = {
  methods: methods,
  constants: c
};
